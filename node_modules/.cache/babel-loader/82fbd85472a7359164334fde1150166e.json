{"ast":null,"code":"var _jsxFileName = \"/home/student/Downloads/ExpenseTracker-React/src/components/AddTransaction.js\";\nimport React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nexport const AddExpense = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n  const {\n    addEx\n  } = useContext(GlobalContext);\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    };\n    addTransaction(newTransaction);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Add New Transaction\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Expense Category\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    placeholder: \"Enter expense category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Amount \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }), \"(negative - expense, positive - income)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    placeholder: \"Enter amount...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Add transaction\")));\n};","map":{"version":3,"names":["React","useState","useContext","GlobalContext","AddExpense","text","setText","amount","setAmount","addEx","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","addTransaction","target","value"],"sources":["/home/student/Downloads/ExpenseTracker-React/src/components/AddTransaction.js"],"sourcesContent":["import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddExpense = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const { addEx } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    }\n\n    addTransaction(newTransaction);\n  }\n\n  return (\n    <>\n      <h3>Add New Transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Expense Category</label>\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter expense category\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\"\n            >Amount <br />\n            (negative - expense, positive - income)</label\n          >\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AACjD,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,OAAO,MAAMC,UAAU,GAAG,MAAM;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAM;IAAEQ;EAAM,CAAC,GAAGP,UAAU,CAACC,aAAa,CAAC;EAE3C,MAAMO,QAAQ,GAAGC,CAAC,IAAI;IACpBA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAMC,cAAc,GAAG;MACrBC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,SAAS,CAAC;MACzCZ,IAAI;MACJE,MAAM,EAAE,CAACA;IACX,CAAC;IAEDW,cAAc,CAACL,cAAc,CAAC;EAChC,CAAC;EAED,oBACE,uDACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBAA4B,eAC5B;IAAM,QAAQ,EAAEH,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvB;IAAK,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3B;IAAO,OAAO,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAAyB,eAC9C;IAAO,IAAI,EAAC,MAAM;IAAC,KAAK,EAAEL,IAAK;IAAC,QAAQ,EAAGM,CAAC,IAAKL,OAAO,CAACK,CAAC,CAACQ,MAAM,CAACC,KAAK,CAAE;IAAC,WAAW,EAAC,wBAAwB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC7G,eACN;IAAK,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3B;IAAO,OAAO,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2BACb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,4CAEf,eACD;IAAO,IAAI,EAAC,QAAQ;IAAC,KAAK,EAAEb,MAAO;IAAC,QAAQ,EAAGI,CAAC,IAAKH,SAAS,CAACG,CAAC,CAACQ,MAAM,CAACC,KAAK,CAAE;IAAC,WAAW,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC5G,eACN;IAAQ,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qBAAyB,CAC3C,CACN;AAEP,CAAC"},"metadata":{},"sourceType":"module"}